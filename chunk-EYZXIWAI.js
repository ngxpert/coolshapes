import{a as N,b as c}from"./chunk-7LPFYMFL.js";import{i as b,k as P}from"./chunk-YFBF7X72.js";import{a as w}from"./chunk-H7QLDSBX.js";import{Eb as h,Ka as g,L as r,La as u,Ma as m,Wa as v,Wb as G,Xa as l,ia as C,la as p,pa as x,tb as D,za as d}from"./chunk-2V6ZFB25.js";import{a as f,b as y,g as F}from"./chunk-P2VZOJAX.js";var O=F(G());var T={title:"Global",mdFile:"./index.md",category:N,order:1,playgrounds:{CoolshapePlayground:{target:c,template:"<ng-doc-selector></ng-doc-selector>"}}},t=T;var A=(()=>{let e=class e extends P{constructor(){super(t.playgrounds.CoolshapePlayground.target),this.configData=t.playgrounds.CoolshapePlayground.data}};e.selector="coolshape",e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=r({type:e,selectors:[["ng-doc-playground-1"]],viewQuery:function(o,n){if(o&1&&(g(t.playgrounds.CoolshapePlayground.target,7),g(t.playgrounds.CoolshapePlayground.target,7,C)),o&2){let a;u(a=m())&&(n.playground=a.first),u(a=m())&&(n.viewContainerRef=a.first)}},standalone:!0,features:[p,l],decls:1,vars:5,consts:[[3,"type","index","random","noise","size"]],template:function(o,n){o&1&&d(0,"coolshape",0),o&2&&x("type",n.properties.type)("index",n.properties.index)("random",n.properties.random)("noise",n.properties.noise)("size",n.properties.size)},dependencies:[D,c],encapsulation:2,changeDetection:0});let i=e;return i})();var R=[b("CoolshapePlayground",A)];var M={},S=M;var k=`<h1 id="global" class="ngde">Global<a title="Link to heading" class="ng-doc-header-link ngde" href="/examples/global#global"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">Just import the Global component <code class="ngde">coolshape</code> and it will work.</p><ng-doc-blockquote type="note" class="ngde"><p class="ngde">Setting the <code class="ngde">random</code> input to <code class="ngde">true</code> or leaving the <code class="ngde">index</code> or <code class="ngde">type</code> inputs empty would replace the shape with a random shape every time it renders.</p></ng-doc-blockquote><ng-doc-playground id="CoolshapePlayground" indexable="false" class="ngde"><div id="selectors" class="ngde">coolshape</div><div id="pipeName" class="ngde"></div><div id="data" class="ngde">{"type":{"inputName":"type","type":"ShapeTypes | undefined","description":"&#x3C;p>The category of shapes, if left empty it will randomly select a category.&#x3C;/p>","options":["undefined","'number'","'star'","'flower'","'ellipse'","'wheel'","'moon'","'misc'","'triangle'","'polygon'","'rectangle'"]},"index":{"inputName":"index","type":"number | undefined","description":"&#x3C;p>The index of shape within the shape category, it would randomly select a shape from the category if type inputs given. index starts from 0.&#x3C;/p>","options":["undefined","number"]},"random":{"inputName":"random","type":"boolean | undefined","description":"&#x3C;p>If set true it will select a random shape&#x3C;/p>","options":["undefined","false","true"]},"noise":{"inputName":"noise","type":"boolean","description":"&#x3C;p>Whether to add noise to the shape or not.
Defaults to true&#x3C;/p>","options":["false","true"]},"size":{"inputName":"size","type":"number","description":"&#x3C;p>The dimension of shape
Defaults to 200&#x3C;/p>","options":[]}}</div><div id="options" class="ngde">{}</div></ng-doc-playground>`,z=(()=>{let e=class e extends h{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=k,this.editSourceFileUrl="https://github.com/ngxpert/coolshapes/edit/main/src/app/categories/examples/pages/global/index.md?message=docs(global): describe your changes here...",this.page=t,this.demoAssets=S}};e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=r({type:e,selectors:[["ng-doc-page-examples-global"]],standalone:!0,features:[v([{provide:h,useExisting:e},R,t.providers??[]]),p,l],decls:1,vars:0,template:function(o,n){o&1&&d(0,"ng-doc-page")},dependencies:[w],encapsulation:2,changeDetection:0});let i=e;return i})(),Q=[y(f({},(0,O.isRoute)(t.route)?t.route:{}),{path:"",component:z,title:"Global"})],te=Q;export{z as DynamicComponent,te as default};
